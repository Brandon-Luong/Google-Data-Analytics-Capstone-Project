min_sleep <- read_csv('minuteSleep_merged.csv')
min_met_narrow <- read_csv('minuteMETsNarrow_merged.csv')
# Per Second
sec_heartrate <- read_csv('heartrate_seconds_merged.csv')
# Other
weight_log <- read_csv('weightLogInfo_merged.csv') # Use
head(daily_act)
colnames(daily_act)
head(daily_cal)
colnames(daily_cal)
# Calculate the number of differing values in daily_cal
diff <- daily_cal
diff$Id <- ifelse(daily_act$Id != daily_cal$Id, 1, 0)
diff$ActivityDay <- ifelse(daily_act$ActivityDate != daily_cal$ActivityDay, 1, 0)
diff$Calories <- ifelse(daily_act$Calories != daily_cal$Calories, 1, 0)
colSums(diff)
head(daily_intense)
colnames(daily_intense)
# Calculate the number of differing values in daily_intense
diff <- daily_intense
diff$Id <- ifelse(daily_act$Id != daily_intense$Id, 1, 0)
diff$ActivityDay <- ifelse(daily_act$ActivityDate != daily_intense$ActivityDay, 1, 0)
diff$SedentaryMinutes <- ifelse(daily_act$SedentaryMinutes != daily_intense$SedentaryMinutes, 1, 0)
diff$LightlyActiveMinutes <- ifelse(daily_act$LightlyActiveMinutes != daily_intense$LightlyActiveMinutes, 1, 0)
diff$FairlyActiveMinutes <- ifelse(daily_act$FairlyActiveMinutes != daily_intense$FairlyActiveMinutes, 1, 0)
diff$VeryActiveMinutes <- ifelse(daily_act$VeryActiveMinutes != daily_intense$VeryActiveMinutes, 1, 0)
diff$SedentaryActiveDistance <- ifelse(daily_act$SedentaryActiveDistance != daily_intense$SedentaryActiveDistance, 1, 0)
diff$LightActiveDistance <- ifelse(daily_act$LightActiveDistance != daily_intense$LightActiveDistance, 1, 0)
diff$ModeratelyActiveDistance <- ifelse(daily_act$ModeratelyActiveDistance != daily_intense$ModeratelyActiveDistance, 1, 0)
diff$VeryActiveDistance <- ifelse(daily_act$VeryActiveDistance != daily_intense$VeryActiveDistance, 1, 0)
colSums(diff)
head(daily_steps)
colnames(daily_steps)
# Calculate the number of differing values in daily_steps
diff <- daily_steps
diff$Id <- ifelse(daily_act$Id != daily_steps$Id, 1, 0)
diff$ActivityDay <- ifelse(daily_act$ActivityDate != daily_steps$ActivityDay, 1, 0)
diff$StepTotal <- ifelse(daily_act$TotalSteps != daily_steps$StepTotal, 1, 0)
colSums(diff)
head(daily_sleep)
colnames(daily_sleep)
n_distinct(daily_sleep$Id)
n_distinct(daily_sleep$SleepDay)
table(daily_sleep$SleepDay)
n_distinct(daily_act$Id)
n_distinct(daily_act$ActivityDate)
unique(daily_act$ActivityDate)
table(daily_act$ActivityDate)
# Remove data frames from R environment
rm(
daily_cal,
daily_intense,
daily_steps,
diff # dummy variable
)
head(hourly_cal)
colnames(hourly_cal)
head(hourly_intense)
colnames(hourly_intense)
head(hourly_steps)
colnames(hourly_steps)
# Remove data frames from R environment
rm(
hourly_cal,
hourly_intense,
hourly_steps
)
head(min_cal_narrow)
head(min_cal_wide)
head(min_intense_narrow)
head(min_intense_wide)
head(min_steps_narrow)
head(min_steps_wide)
head(min_sleep)
head(min_met_narrow)
# Drop data frames from R environment
rm(
min_cal_narrow,
min_cal_wide,
min_intense_narrow,
min_intense_wide,
min_steps_narrow,
min_steps_wide,
min_sleep,
min_met_narrow
)
head(sec_heartrate)
# Remove data frame from R environment
rm(sec_heartrate)
head(weight_log)
colnames(weight_log)
n_distinct(weight_log$Id)
n_distinct(weight_log$Fat)
unique(weight_log$Fat)
table(weight_log$Id)
summary(daily_act)
clean_names(daily_act)
setwd("~/R/capstone_project")
library(tidyverse) # data science package
library(janitor) # data cleaning package
clean_names(daily_act)
View(daily_act)
head(daily_act)
head(daily_sleep)
clean_names(daily_sleep)
head(weight_log)
clean_names(weight_log)
# Convert column names into snake case
daily_act <- clean_names(daily_act)
daily_sleep <- clean_names(daily_sleep)
weight_log <- clean_names(weight_log)
View(daily_act)
View(daily_act)
View(daily_sleep)
View(weight_log)
is.na(daily_act)
sum(is.na(daily_act))
library(skimr) # Viewing
skim_with(daily_act)
skim_without_charts(daily_act)
skim_without_charts(daily_sleep)
head(daily_act)
head(daily_sleep)
head(weight_log)
327/60
407/60
712/60
skim_without_charts(weight_log)
unique(daily_sleep$total_sleep_records)
unique(weight_log$date)
unique(daily_sleep$total_sleep_records)
n_distinct(weight_log$log_id)
table(weight_log$log_id)
freq <- table(weight_log$log_id)
freq[freq$Freq > 1]
freq <- table(weight_log$log_id)
freq[freq$Freq > 1,]
freq <- data.frame(table(weight_log$log_id))
freq[freq$Freq > 1]
View(freq)
freq <- data.frame(table(weight_log$log_id))
freq$Freq > 1
weight_log %>%
duplicated()
weight_log$log_id %>%
duplicated()
weight_log[duplicated(weight_log$log_id)]
weight_log[duplicated(weight_log$log_id),]
# Return rows with the
arrange(weight_log[duplicated(weight_log$log_id),], weight_log$log_id)
# Return rows with the
weight_log[duplicated(weight_log$log_id),]
# Return rows with repeated log ids
weight_log[duplicated(weight_log$log_id),][order(log_id)]
# Return rows with repeated log ids
repeat_id <- weight_log[duplicated(weight_log$log_id),]
repeat_id[order(log_id),]
# Return rows with repeated log ids
repeat_id <- weight_log[duplicated(weight_log$log_id),]
repeat_id %>%
arrange(log_id)
# Convert date from datetime to date format
new_date <- as.Date(weight_log$date)
new_date
# Convert date from datetime to date format
new_date <- as.Date(weight_log$date, '%m%d%Y')
new_date
# Convert date from datetime to date format
new_date <- substr(weight_log$date, 1, 9)
new_date
?str_trim
# Convert date from datetime to date format
new_date <- substr(weight_log$date, 1, 9)
str_trim(new_date, side = c('right'))
# Convert date from datetime to date format
new_date <- substr(weight_log$date, 1, 9)
weight_log$date <- str_trim(new_date, side = c('right'))
skim_without_charts(weight_log)
View(daily_sleep)
# Rename sleep_day to date
daily_sleep %>%
rename(date=sleep_day)
# Convert date from datetime to date format
new_date <- substr(daily_sleep$date, 1, 9)
daily_sleep$date <- str_trim(new_date, side = c('right'))
View(daily_sleep)
# Rename sleep_day to date
daily_sleep <- daily_sleep %>%
rename(date=sleep_day)
# Convert date from datetime to date format
new_date <- substr(daily_sleep$date, 1, 9)
daily_sleep$date <- str_trim(new_date, side = c('right'))
View(daily_sleep)
View(daily_sleep)
skim_without_charts(daily_sleep)
head(daily_sleep)
head(weight_log)
# Drop fat column
weight_log <- weight_log %>%
select(-fat)
head(weight_log)
# Rename activity_date to date
daily_act <- daily_act %>%
rename(date=activity_date)
head(daily_act)
# Drop fat and log_id columns
weight_log <- weight_log %>%
select(-c(fat, log_id))
# Other
weight_log <- read_csv('weightLogInfo_merged.csv') # Use
weight_log <- clean_names(weight_log)
# Convert date from datetime to date format
new_date <- substr(weight_log$date, 1, 9)
weight_log$date <- str_trim(new_date, side = c('right'))
head(weight_log)
# Drop fat and log_id columns
weight_log <- weight_log %>%
select(-c(fat, log_id))
head(weight_log)
library(tidyverse) # Data science package
library(janitor) # Data cleaning
library(skimr) # Viewing
# Per Day
daily_act <- read_csv('dailyActivity_merged.csv') # Use
daily_cal <- read_csv('dailyCalories_merged.csv')
daily_intense <- read_csv('dailyIntensities_merged.csv')
daily_steps <- read_csv('dailySteps_merged.csv')
daily_sleep <- read_csv('sleepDay_merged.csv') # Use
# Per Hour
hourly_cal <-read_csv('hourlyCalories_merged.csv')
hourly_intense <- read_csv('hourlyIntensities_merged.csv')
hourly_steps <- read_csv('hourlySteps_merged.csv')
# Per Minute
min_cal_narrow <- read_csv('minuteCaloriesNarrow_merged.csv')
min_cal_wide <- read_csv('minuteCaloriesWide_merged.csv')
min_intense_narrow <- read_csv('minuteIntensitiesNarrow_merged.csv')
min_intense_wide <- read_csv('minuteIntensitiesWide_merged.csv')
min_steps_narrow <- read_csv('minuteStepsNarrow_merged.csv')
min_steps_wide <- read_csv('minuteStepsWide_merged.csv')
min_sleep <- read_csv('minuteSleep_merged.csv')
min_met_narrow <- read_csv('minuteMETsNarrow_merged.csv')
# Per Second
sec_heartrate <- read_csv('heartrate_seconds_merged.csv')
# Other
weight_log <- read_csv('weightLogInfo_merged.csv') # Use
head(daily_act)
colnames(daily_act)
head(daily_cal)
colnames(daily_cal)
# Calculate the number of differing values in daily_cal
diff <- daily_cal
diff$Id <- ifelse(daily_act$Id != daily_cal$Id, 1, 0)
diff$ActivityDay <- ifelse(daily_act$ActivityDate != daily_cal$ActivityDay, 1, 0)
diff$Calories <- ifelse(daily_act$Calories != daily_cal$Calories, 1, 0)
colSums(diff)
head(daily_intense)
colnames(daily_intense)
# Calculate the number of differing values in daily_intense
diff <- daily_intense
diff$Id <- ifelse(daily_act$Id != daily_intense$Id, 1, 0)
diff$ActivityDay <- ifelse(daily_act$ActivityDate != daily_intense$ActivityDay, 1, 0)
diff$SedentaryMinutes <- ifelse(daily_act$SedentaryMinutes != daily_intense$SedentaryMinutes, 1, 0)
diff$LightlyActiveMinutes <- ifelse(daily_act$LightlyActiveMinutes != daily_intense$LightlyActiveMinutes, 1, 0)
diff$FairlyActiveMinutes <- ifelse(daily_act$FairlyActiveMinutes != daily_intense$FairlyActiveMinutes, 1, 0)
diff$VeryActiveMinutes <- ifelse(daily_act$VeryActiveMinutes != daily_intense$VeryActiveMinutes, 1, 0)
diff$SedentaryActiveDistance <- ifelse(daily_act$SedentaryActiveDistance != daily_intense$SedentaryActiveDistance, 1, 0)
diff$LightActiveDistance <- ifelse(daily_act$LightActiveDistance != daily_intense$LightActiveDistance, 1, 0)
diff$ModeratelyActiveDistance <- ifelse(daily_act$ModeratelyActiveDistance != daily_intense$ModeratelyActiveDistance, 1, 0)
diff$VeryActiveDistance <- ifelse(daily_act$VeryActiveDistance != daily_intense$VeryActiveDistance, 1, 0)
colSums(diff)
head(daily_steps)
colnames(daily_steps)
# Calculate the number of differing values in daily_steps
diff <- daily_steps
diff$Id <- ifelse(daily_act$Id != daily_steps$Id, 1, 0)
diff$ActivityDay <- ifelse(daily_act$ActivityDate != daily_steps$ActivityDay, 1, 0)
diff$StepTotal <- ifelse(daily_act$TotalSteps != daily_steps$StepTotal, 1, 0)
colSums(diff)
head(daily_sleep)
colnames(daily_sleep)
n_distinct(daily_sleep$Id)
n_distinct(daily_sleep$SleepDay)
table(daily_sleep$SleepDay)
n_distinct(daily_act$Id)
n_distinct(daily_act$ActivityDate)
unique(daily_act$ActivityDate)
table(daily_act$ActivityDate)
# Remove data frames from R environment
rm(
daily_cal,
daily_intense,
daily_steps,
diff # dummy variable
)
head(hourly_cal)
colnames(hourly_cal)
head(hourly_intense)
colnames(hourly_intense)
head(hourly_steps)
colnames(hourly_steps)
# Remove data frames from R environment
rm(
hourly_cal,
hourly_intense,
hourly_steps
)
head(min_cal_narrow)
head(min_cal_wide)
head(min_intense_narrow)
head(min_intense_wide)
head(min_steps_narrow)
head(min_steps_wide)
head(min_sleep)
head(min_met_narrow)
# Drop data frames from R environment
rm(
min_cal_narrow,
min_cal_wide,
min_intense_narrow,
min_intense_wide,
min_steps_narrow,
min_steps_wide,
min_sleep,
min_met_narrow
)
head(sec_heartrate)
# Remove data frame from R environment
rm(sec_heartrate)
head(weight_log)
colnames(weight_log)
n_distinct(weight_log$Id)
n_distinct(weight_log$Fat)
unique(weight_log$Fat)
table(weight_log$Id)
# Convert column names into snake case
daily_act <- clean_names(daily_act)
daily_sleep <- clean_names(daily_sleep)
weight_log <- clean_names(weight_log)
head(daily_act)
skim_without_charts(daily_act)
# Rename activity_date to date
daily_act <- daily_act %>%
rename(date=activity_date)
head(daily_act)
head(daily_sleep)
skim_without_charts(daily_sleep)
unique(daily_sleep$total_sleep_records)
# Rename sleep_day to date
daily_sleep <- daily_sleep %>%
rename(date=sleep_day)
# Convert date from datetime to date format
new_date <- substr(daily_sleep$date, 1, 9)
daily_sleep$date <- str_trim(new_date, side = c('right'))
head(daily_sleep)
head(weight_log)
skim_without_charts(weight_log)
unique(weight_log$date)
n_distinct(weight_log$log_id)
# Convert date from datetime to date format
new_date <- substr(weight_log$date, 1, 9)
weight_log$date <- str_trim(new_date, side = c('right'))
head(weight_log)
# Drop fat and log_id columns
weight_log <- weight_log %>%
select(-c(fat, log_id))
head(weight_log)
library(tidyverse) # Data science package
library(janitor) # Data cleaning
library(skimr) # Viewing
# Per Day
daily_act <- read_csv('dailyActivity_merged.csv') # Use
daily_cal <- read_csv('dailyCalories_merged.csv')
daily_intense <- read_csv('dailyIntensities_merged.csv')
daily_steps <- read_csv('dailySteps_merged.csv')
daily_sleep <- read_csv('sleepDay_merged.csv') # Use
# Per Hour
hourly_cal <-read_csv('hourlyCalories_merged.csv')
hourly_intense <- read_csv('hourlyIntensities_merged.csv')
hourly_steps <- read_csv('hourlySteps_merged.csv')
# Per Minute
min_cal_narrow <- read_csv('minuteCaloriesNarrow_merged.csv')
min_cal_wide <- read_csv('minuteCaloriesWide_merged.csv')
min_intense_narrow <- read_csv('minuteIntensitiesNarrow_merged.csv')
min_intense_wide <- read_csv('minuteIntensitiesWide_merged.csv')
min_steps_narrow <- read_csv('minuteStepsNarrow_merged.csv')
min_steps_wide <- read_csv('minuteStepsWide_merged.csv')
min_sleep <- read_csv('minuteSleep_merged.csv')
min_met_narrow <- read_csv('minuteMETsNarrow_merged.csv')
# Per Second
sec_heartrate <- read_csv('heartrate_seconds_merged.csv')
# Other
weight_log <- read_csv('weightLogInfo_merged.csv') # Use
head(daily_act)
colnames(daily_act)
head(daily_cal)
colnames(daily_cal)
# Calculate the number of differing values in daily_cal
diff <- daily_cal
diff$Id <- ifelse(daily_act$Id != daily_cal$Id, 1, 0)
diff$ActivityDay <- ifelse(daily_act$ActivityDate != daily_cal$ActivityDay, 1, 0)
diff$Calories <- ifelse(daily_act$Calories != daily_cal$Calories, 1, 0)
colSums(diff)
head(daily_intense)
colnames(daily_intense)
# Calculate the number of differing values in daily_intense
diff <- daily_intense
diff$Id <- ifelse(daily_act$Id != daily_intense$Id, 1, 0)
diff$ActivityDay <- ifelse(daily_act$ActivityDate != daily_intense$ActivityDay, 1, 0)
diff$SedentaryMinutes <- ifelse(daily_act$SedentaryMinutes != daily_intense$SedentaryMinutes, 1, 0)
diff$LightlyActiveMinutes <- ifelse(daily_act$LightlyActiveMinutes != daily_intense$LightlyActiveMinutes, 1, 0)
diff$FairlyActiveMinutes <- ifelse(daily_act$FairlyActiveMinutes != daily_intense$FairlyActiveMinutes, 1, 0)
diff$VeryActiveMinutes <- ifelse(daily_act$VeryActiveMinutes != daily_intense$VeryActiveMinutes, 1, 0)
diff$SedentaryActiveDistance <- ifelse(daily_act$SedentaryActiveDistance != daily_intense$SedentaryActiveDistance, 1, 0)
diff$LightActiveDistance <- ifelse(daily_act$LightActiveDistance != daily_intense$LightActiveDistance, 1, 0)
diff$ModeratelyActiveDistance <- ifelse(daily_act$ModeratelyActiveDistance != daily_intense$ModeratelyActiveDistance, 1, 0)
diff$VeryActiveDistance <- ifelse(daily_act$VeryActiveDistance != daily_intense$VeryActiveDistance, 1, 0)
colSums(diff)
head(daily_steps)
colnames(daily_steps)
# Calculate the number of differing values in daily_steps
diff <- daily_steps
diff$Id <- ifelse(daily_act$Id != daily_steps$Id, 1, 0)
diff$ActivityDay <- ifelse(daily_act$ActivityDate != daily_steps$ActivityDay, 1, 0)
diff$StepTotal <- ifelse(daily_act$TotalSteps != daily_steps$StepTotal, 1, 0)
colSums(diff)
head(daily_sleep)
colnames(daily_sleep)
n_distinct(daily_sleep$Id)
n_distinct(daily_sleep$SleepDay)
table(daily_sleep$SleepDay)
n_distinct(daily_act$Id)
n_distinct(daily_act$ActivityDate)
unique(daily_act$ActivityDate)
table(daily_act$ActivityDate)
# Remove data frames from R environment
rm(
daily_cal,
daily_intense,
daily_steps,
diff # dummy variable
)
head(hourly_cal)
colnames(hourly_cal)
head(hourly_intense)
colnames(hourly_intense)
head(hourly_steps)
colnames(hourly_steps)
# Remove data frames from R environment
rm(
hourly_cal,
hourly_intense,
hourly_steps
)
head(min_cal_narrow)
head(min_cal_wide)
head(min_intense_narrow)
head(min_intense_wide)
head(min_steps_narrow)
head(min_steps_wide)
head(min_sleep)
head(min_met_narrow)
# Drop data frames from R environment
rm(
min_cal_narrow,
min_cal_wide,
min_intense_narrow,
min_intense_wide,
min_steps_narrow,
min_steps_wide,
min_sleep,
min_met_narrow
)
head(sec_heartrate)
# Remove data frame from R environment
rm(sec_heartrate)
head(weight_log)
colnames(weight_log)
n_distinct(weight_log$Id)
n_distinct(weight_log$Fat)
unique(weight_log$Fat)
table(weight_log$Id)
# Convert column names into snake case
daily_act <- clean_names(daily_act)
daily_sleep <- clean_names(daily_sleep)
weight_log <- clean_names(weight_log)
head(daily_act)
skim_without_charts(daily_act)
# Rename activity_date to date
daily_act <- daily_act %>%
rename(date=activity_date)
head(daily_act)
head(daily_sleep)
skim_without_charts(daily_sleep)
unique(daily_sleep$total_sleep_records)
# Rename sleep_day to date
daily_sleep <- daily_sleep %>%
rename(date=sleep_day)
# Convert date from datetime to date format
new_date <- substr(daily_sleep$date, 1, 9)
daily_sleep$date <- str_trim(new_date, side = c('right'))
head(daily_sleep)
head(weight_log)
skim_without_charts(weight_log)
unique(weight_log$date)
n_distinct(weight_log$log_id)
# Convert date from datetime to date format
new_date <- substr(weight_log$date, 1, 9)
weight_log$date <- str_trim(new_date, side = c('right'))
# Drop fat and log_id columns
weight_log <- weight_log %>%
select(-c(fat, log_id))
head(weight_log)
