label = steps_median) +
scale_y_continuous(label=comma, n.breaks = 10)
steps_per_day_plot
steps_median <- merged_df %>%
group_by(day_of_week) %>%
summarise(stepp_median = median(steps))
steps_per_day_plot <- ggplot(data = merged_df, aes(x=day_of_week, y=steps, color=day_of_week)) +
geom_boxplot(notch=TRUE) +
geom_label(data = steps_median,
aes(x=day_of_week, y=stepp_median, label=stepp_median))
steps_per_day_plot
steps_per_day_plot <- ggplot(data = merged_df, aes(x=day_of_week, y=steps, color=day_of_week)) +
geom_boxplot(notch=TRUE) +
# geom_label(data = steps_median,
#            aes(x=day_of_week, y=stepp_median, label=stepp_median))
steps_per_day_plot
steps_per_day_plot <- ggplot(data = merged_df, aes(x=day_of_week, y=steps, color=day_of_week)) +
geom_boxplot(notch=TRUE)
# geom_label(data = steps_median,
#            aes(x=day_of_week, y=stepp_median, label=stepp_median))
steps_per_day_plot
steps_per_day_plot +
geom_label(data = steps_median,
aes(x=day_of_week, y=stepp_median, label=stepp_median))
steps_per_day_plot +
geom_text(data = steps_median,
aes(x=day_of_week, y=stepp_median, label=stepp_median))
steps_per_day_plot +
geom_text(data = steps_median,
aes(x=day_of_week, y=stepp_median, label=stepp_median),
position = position_nudge(x=0.33))
steps_per_day_plot +
geom_text(data = steps_median,
aes(x=day_of_week, y=stepp_median, label=stepp_median),
position = position_nudge(x=0.53))
steps_per_day_plot +
geom_text(data = steps_median,
aes(x=day_of_week, y=stepp_median, label=stepp_median, color = 'black'),
position = position_nudge(x=0.53))
steps_per_day_plot <- steps_per_day_plot +
theme(legend.position = "none") +
labs(title = "Steps vs. Day of the Week",
x = "Day of the Week",
colour = "Day of the Week")
steps_per_day_plot
steps_per_day_plot +
geom_text(data = steps_median,
aes(x=day_of_week, y=stepp_median, label=stepp_median, color = 'black'),
position = position_nudge(x=0.53))
steps_per_day_plot +
geom_text(data = steps_median,
aes(x=day_of_week, y=stepp_median, label=stepp_median, color = 'black'),
position = position_nudge(y=0.5))
steps_per_day_plot +
geom_text(data = steps_median,
aes(x=day_of_week, y=stepp_median, label=stepp_median, color = 'black'),
position = position_nudge(y=0.9))
steps_per_day_plot +
geom_text(data = steps_median,
aes(x=day_of_week, y=stepp_median, label=stepp_median, color = 'black'),
position = position_nudge(y=-0.9))
steps_per_day_plot +
geom_text(data = steps_median,
aes(x=day_of_week, y=stepp_median, label=stepp_median, color = 'black'),
position = position_nudge(y=-50))
steps_per_day_plot +
geom_text(data = steps_median,
aes(x=day_of_week, y=stepp_median, label=stepp_median, color = 'black'),
position = position_nudge(y=-50000))
steps_per_day_plot +
geom_text(data = steps_median,
aes(x=day_of_week, y=stepp_median, label=stepp_median, color = 'black'),
position = position_nudge(y=100))
steps_per_day_plot +
geom_text(data = steps_median,
aes(x=day_of_week, y=stepp_median, label=stepp_median, color = 'black'),
position = position_nudge(y=1000))
steps_per_day_plot +
geom_text(data = steps_median,
aes(x=day_of_week, y=stepp_median, label=stepp_median),
position = position_nudge(y=1000))
# Compute median
step_median <- merged_df %>%
group_by(day_of_week) %>%
summarise(steps_median = median(steps))
steps_per_day_plot <- steps_per_day_plot +
theme(legend.position = "none") +
labs(title = "Steps vs. Day of the Week",
x = "Day of the Week",
colour = "Day of the Week") +
geom_text(data = steps_median,
aes(x=day_of_week, y=stepp_median, label=stepp_median),
position = position_nudge(y=1000))
steps_per_day_plot
# Compute median
step_median <- merged_df %>%
group_by(day_of_week) %>%
summarise(steps_median = median(steps))
steps_per_day_plot <- steps_per_day_plot +
# Labels
theme(legend.position = "none") +
labs(title = "Steps vs. Day of the Week",
x = "Day of the Week",
colour = "Day of the Week") +
# Annotate median values
geom_text(data = steps_median,
aes(x=day_of_week, y=stepp_median, label=stepp_median),
position = position_nudge(y=1000))
steps_per_day_plot
steps_per_day_plot <- ggplot(data = merged_df) +
geom_boxplot(aes(x=day_of_week, y=steps, color=day_of_week), notch=TRUE) +
scale_y_continuous(label = comma, n.breaks = 10)
steps_per_day_plot
# Compute median
step_median <- merged_df %>%
group_by(day_of_week) %>%
summarise(steps_median = median(steps))
steps_per_day_plot <- steps_per_day_plot +
# Labels
theme(legend.position = "none") +
labs(title = "Steps vs. Day of the Week",
x = "Day of the Week",
colour = "Day of the Week") +
# Annotate median values
geom_text(data = steps_median,
aes(x=day_of_week, y=stepp_median, label=stepp_median),
position = position_nudge(y=1000))
steps_per_day_plot
# Compute median
step_median <- merged_df %>%
group_by(day_of_week) %>%
summarise(steps_median = median(steps))
steps_per_day_plot <- steps_per_day_plot +
# Labels
theme(legend.position = "none") +
labs(title = "Steps vs. Day of the Week",
x = "Day of the Week",
colour = "Day of the Week") +
# Annotate median values
geom_text(data = step_median,
aes(x=day_of_week, y=steps_median, label=steps_median),
position = position_nudge(y=1000))
steps_per_day_plot
# Compute median
step_median <- merged_df %>%
group_by(day_of_week) %>%
summarise(steps_median = median(steps))
steps_per_day_plot <- steps_per_day_plot +
# Labels
theme(legend.position = "none") +
labs(title = "Steps vs. Day of the Week",
x = "Day of the Week",
colour = "Day of the Week") +
# Annotate median values
geom_text(data = step_median,
aes(x=day_of_week, y=steps_median, label= scales::comma(steps_median)),
position = position_nudge(y=1000))
steps_per_day_plot
# Compute median
step_median <- merged_df %>%
group_by(day_of_week) %>%
summarise(steps_median = median(steps))
steps_per_day_plot <- steps_per_day_plot +
# Labels
theme(legend.position = "none") +
labs(title = "Steps vs. Day of the Week",
x = "Day of the Week",
colour = "Day of the Week") +
# Annotate median values
geom_text(data = step_median,
aes(x=day_of_week, y=steps_median, label= scales:comma(steps_median)),
position = position_nudge(y=1000))
steps_per_day_plot
# Compute median
step_median <- merged_df %>%
group_by(day_of_week) %>%
summarise(steps_median = median(steps))
steps_per_day_plot <- steps_per_day_plot +
# Labels
theme(legend.position = "none") +
labs(title = "Steps vs. Day of the Week",
x = "Day of the Week",
colour = "Day of the Week") +
# Annotate median values
geom_text(data = step_median,
aes(x=day_of_week, y=steps_median, label= scales::comma(steps_median)),
position = position_nudge(y=1000))
steps_per_day_plot
# Compute median
step_median <- merged_df %>%
group_by(day_of_week) %>%
summarise(steps_median = median(steps))
steps_per_day_plot <- steps_per_day_plot +
# Labels
theme(legend.position = "none") +
labs(title = "Steps vs. Day of the Week",
x = "Day of the Week",
colour = "Day of the Week") +
# Annotate median values
geom_text(data = step_median,
aes(x=day_of_week, y=steps_median, label=steps_median),
position = position_nudge(y=1000))
steps_per_day_plot
steps_per_day_plot <- ggplot(data = merged_df) +
geom_boxplot(aes(x=day_of_week, y=steps, color=day_of_week), notch=TRUE) +
scale_y_continuous(label = comma, n.breaks = 10)
steps_per_day_plot
# Compute median
step_median <- merged_df %>%
group_by(day_of_week) %>%
summarise(steps_median = median(steps))
steps_per_day_plot <- steps_per_day_plot +
# Labels
theme(legend.position = "none") +
labs(title = "Steps vs. Day of the Week",
x = "Day of the Week",
colour = "Day of the Week") +
# Annotate median values
geom_text(data = step_median,
aes(x=day_of_week, y=steps_median, label=steps_median),
position = position_nudge(y=1000))
steps_per_day_plot
library(tidyverse) # General purpose data science package
library(janitor) # Data cleaning
library(lubridate) # Date parsing and cleaning
library(skimr) # Viewing
library(patchwork) #ggplot helper
library(scales) # ggplot helper
# Per Day
daily_act <- read_csv('dailyActivity_merged.csv') # Use
daily_cal <- read_csv('dailyCalories_merged.csv')
daily_intense <- read_csv('dailyIntensities_merged.csv')
daily_steps <- read_csv('dailySteps_merged.csv')
daily_sleep <- read_csv('sleepDay_merged.csv') # Use
# Per Hour
hourly_cal <-read_csv('hourlyCalories_merged.csv')
hourly_intense <- read_csv('hourlyIntensities_merged.csv')
hourly_steps <- read_csv('hourlySteps_merged.csv')
# Per Minute
min_cal_narrow <- read_csv('minuteCaloriesNarrow_merged.csv')
min_cal_wide <- read_csv('minuteCaloriesWide_merged.csv')
min_intense_narrow <- read_csv('minuteIntensitiesNarrow_merged.csv')
min_intense_wide <- read_csv('minuteIntensitiesWide_merged.csv')
min_steps_narrow <- read_csv('minuteStepsNarrow_merged.csv')
min_steps_wide <- read_csv('minuteStepsWide_merged.csv')
min_sleep <- read_csv('minuteSleep_merged.csv')
min_met_narrow <- read_csv('minuteMETsNarrow_merged.csv')
# Per Second
sec_heartrate <- read_csv('heartrate_seconds_merged.csv')
# Other
weight_log <- read_csv('weightLogInfo_merged.csv')
head(daily_act)
colnames(daily_act)
head(daily_cal)
colnames(daily_cal)
# Calculate the number of differing values in daily_cal
diff <- daily_cal
diff$Id <- ifelse(daily_act$Id != daily_cal$Id, 1, 0)
diff$ActivityDay <- ifelse(daily_act$ActivityDate != daily_cal$ActivityDay, 1, 0)
diff$Calories <- ifelse(daily_act$Calories != daily_cal$Calories, 1, 0)
colSums(diff)
head(daily_intense)
colnames(daily_intense)
# Calculate the number of differing values in daily_intense
diff <- daily_intense
diff$Id <- ifelse(daily_act$Id != daily_intense$Id, 1, 0)
diff$ActivityDay <- ifelse(daily_act$ActivityDate != daily_intense$ActivityDay, 1, 0)
diff$SedentaryMinutes <- ifelse(daily_act$SedentaryMinutes != daily_intense$SedentaryMinutes, 1, 0)
diff$LightlyActiveMinutes <- ifelse(daily_act$LightlyActiveMinutes != daily_intense$LightlyActiveMinutes, 1, 0)
diff$FairlyActiveMinutes <- ifelse(daily_act$FairlyActiveMinutes != daily_intense$FairlyActiveMinutes, 1, 0)
diff$VeryActiveMinutes <- ifelse(daily_act$VeryActiveMinutes != daily_intense$VeryActiveMinutes, 1, 0)
diff$SedentaryActiveDistance <- ifelse(daily_act$SedentaryActiveDistance != daily_intense$SedentaryActiveDistance, 1, 0)
diff$LightActiveDistance <- ifelse(daily_act$LightActiveDistance != daily_intense$LightActiveDistance, 1, 0)
diff$ModeratelyActiveDistance <- ifelse(daily_act$ModeratelyActiveDistance != daily_intense$ModeratelyActiveDistance, 1, 0)
diff$VeryActiveDistance <- ifelse(daily_act$VeryActiveDistance != daily_intense$VeryActiveDistance, 1, 0)
colSums(diff)
head(daily_steps)
colnames(daily_steps)
# Calculate the number of differing values in daily_steps
diff <- daily_steps
diff$Id <- ifelse(daily_act$Id != daily_steps$Id, 1, 0)
diff$ActivityDay <- ifelse(daily_act$ActivityDate != daily_steps$ActivityDay, 1, 0)
diff$StepTotal <- ifelse(daily_act$TotalSteps != daily_steps$StepTotal, 1, 0)
colSums(diff)
head(daily_sleep)
colnames(daily_sleep)
n_distinct(daily_sleep$Id)
n_distinct(daily_sleep$SleepDay)
table(daily_sleep$SleepDay)
n_distinct(daily_act$Id)
n_distinct(daily_act$ActivityDate)
unique(daily_act$ActivityDate)
table(daily_act$ActivityDate)
# Remove dataframes from R environment
rm(
daily_cal,
daily_intense,
daily_steps,
diff # dummy variable
)
head(hourly_cal)
colnames(hourly_cal)
head(hourly_intense)
colnames(hourly_intense)
head(hourly_steps)
colnames(hourly_steps)
# Remove dataframes from R environment
rm(
hourly_cal,
hourly_intense,
hourly_steps
)
head(min_cal_narrow)
head(min_cal_wide)
head(min_intense_narrow)
head(min_intense_wide)
head(min_steps_narrow)
head(min_steps_wide)
head(min_sleep)
head(min_met_narrow)
# Drop dataframes from R environment
rm(
min_cal_narrow,
min_cal_wide,
min_intense_narrow,
min_intense_wide,
min_steps_narrow,
min_steps_wide,
min_sleep,
min_met_narrow
)
head(sec_heartrate)
# Remove dataframe from R environment
rm(sec_heartrate)
head(weight_log)
colnames(weight_log)
n_distinct(weight_log$Id)
n_distinct(weight_log$Fat)
unique(weight_log$Fat)
table(weight_log$Id)
# Remove dataframe from R environment
rm(weight_log)
# Convert column names into snake case
daily_act <- clean_names(daily_act)
daily_sleep <- clean_names(daily_sleep)
head(daily_act)
skim_without_charts(daily_act)
head(daily_sleep)
skim_without_charts(daily_sleep)
# Rename to date column
daily_act <- daily_act %>%
rename(date=activity_date)
daily_sleep <- daily_sleep %>%
rename(date=sleep_day)
# Convert to date data type
daily_act$date <- mdy(daily_act$date)
daily_sleep$date <- as_date(
mdy_hms(daily_sleep$date)
)
n_distinct(daily_act$id)
n_distinct(daily_sleep$id)
# Merge dataframes
merged_df <- inner_join(daily_act, daily_sleep, by = c('id', 'date'))
head(merged_df)
skim_without_charts(merged_df)
n_distinct(merged_df$id)
head(merged_df)
# Add day of the week column
day_of_week <- wday(merged_df$date, label=TRUE)
merged_df <- add_column(merged_df, day_of_week, .after='date')
# Check if tracker_distance and total_distance are the same columns
sum(ifelse(merged_df$total_distance != merged_df$tracker_distance, 1, 0))
merged_df %>%
filter(total_distance != tracker_distance)
# Check logged_activities_distance values
n_distinct(merged_df$logged_activities_distance)
table(merged_df$logged_activities_distance)
subset(merged_df, logged_activities_distance %in% c(
2.0921471118927,
2.25308108329773,
2.78517508506775,
3.16782188415527,
4.08169221878052
))
n_distinct(merged_df$sedentary_active_distance)
table(merged_df$sedentary_active_distance)
n_distinct(merged_df$total_sleep_records)
table(merged_df$total_sleep_records)
# Drop tracker_distance, logged_activities_distance, sedentary_active_distance, total_sleep_records
merged_df <- merged_df %>%
select(-c(
tracker_distance,
logged_activities_distance,
sedentary_active_distance,
total_sleep_records))
head(merged_df)
# Convert sleep time from minutes to hours
merged_df <- merged_df %>%
mutate(
sleep_hours = total_minutes_asleep / 60,
in_bed_hours = total_time_in_bed / 60) %>%
select(-c(total_minutes_asleep, total_time_in_bed))
head(merged_df)
merged_df <- merged_df %>%
rename(steps = total_steps,
distance = total_distance,
sprint_distance = very_active_distance,
jog_distance = moderately_active_distance,
walk_distance = light_active_distance,
sprint_minutes = very_active_minutes,
jog_minutes = fairly_active_minutes,
walk_minutes = lightly_active_minutes)
head(merged_df)
# Average steps taken per day
merged_df %>%
group_by(day_of_week) %>%
summarise(average_steps = mean(steps))
# Average distance covered per day
merged_df %>%
group_by(day_of_week) %>%
summarise(average_distance = mean(distance))
# Average calories burned per day
merged_df %>%
group_by(day_of_week) %>%
summarise(average_calories = mean(calories))
# Average hours slept per day
merged_df %>%
group_by(day_of_week) %>%
summarise(average_sleep_hours = mean(sleep_hours))
steps_per_day_plot <- ggplot(data = merged_df) +
geom_boxplot(aes(x=day_of_week, y=steps, color=day_of_week), notch=TRUE) +
scale_y_continuous(label = comma, n.breaks = 10)
steps_per_day_plot
ggplot(data = merged_df) +
geom_boxplot(mapping = aes(x=day_of_week, y=distance, color=day_of_week), notch=TRUE) +
scale_y_continuous(n.breaks = 10)
ggplot(data = merged_df) +
geom_boxplot(mapping = aes(x=day_of_week, y=calories, color=day_of_week), notch=TRUE) +
scale_y_continuous(n.breaks = 10)
merged_df %>%
ggplot() +
geom_boxplot(mapping = aes(x=day_of_week, y=sleep_hours, color=day_of_week)) +
scale_y_continuous(n.breaks = 6)
ggplot(data = merged_df) +
geom_point(mapping = aes(x=in_bed_hours, y=sleep_hours)) +
geom_smooth(mapping = aes(x=in_bed_hours, y=sleep_hours)) +
scale_x_continuous(n.breaks = 10) +
scale_y_continuous(n.breaks = 8)
steps_plot <- ggplot(data=merged_df) +
geom_point(mapping = aes(x=steps, y=calories)) +
geom_smooth(mapping = aes(x=steps, y=calories)) +
scale_x_continuous(n.breaks = 10) +
scale_y_continuous(n.breaks = 10)
dist_plot <- ggplot(data=merged_df) +
geom_point(mapping = aes(x=distance, y=calories)) +
geom_smooth(mapping = aes(x=distance, y=calories)) +
scale_x_continuous(n.breaks = 10) +
scale_y_continuous(n.breaks = 10)
steps_plot / dist_plot
sprint_dist_plot <- ggplot(data = merged_df) +
geom_point(mapping = aes(x=sprint_distance, y=calories)) +
geom_smooth(mapping = aes(x=sprint_distance, y=calories))
jog_dist_plot <- ggplot(data = merged_df) +
geom_point(mapping = aes(x=jog_distance, y=calories)) +
geom_smooth(mapping = aes(x=jog_distance, y=calories))
walk_dist_plot <- ggplot(data = merged_df) +
geom_point(mapping = aes(x=walk_distance, y=calories)) +
geom_smooth(mapping = aes(x=walk_distance, y=calories))
(sprint_dist_plot | jog_dist_plot) / walk_dist_plot
ggplot(data = merged_df) +
geom_point(mapping = aes(x=sedentary_minutes, y=calories)) +
geom_smooth(mapping = aes(x=sedentary_minutes, y=calories))
sprint_min_plot <- ggplot(data = merged_df) +
geom_point(mapping = aes(x=sprint_minutes, y=calories)) +
geom_smooth(mapping = aes(x=sprint_minutes, y=calories))
jog_min_plot <- ggplot(data = merged_df) +
geom_point(mapping = aes(x=jog_minutes, y=calories)) +
geom_smooth(mapping = aes(x=jog_minutes, y=calories))
walk_min_plot <- ggplot(data = merged_df) +
geom_point(mapping = aes(x=walk_minutes, y=calories)) +
geom_smooth(mapping = aes(x=walk_minutes, y=calories))
(sprint_min_plot | jog_min_plot) / walk_min_plot
# Compute median
step_median <- merged_df %>%
group_by(day_of_week) %>%
summarise(steps_median = median(steps))
steps_per_day_plot <- steps_per_day_plot +
# Labels
theme(legend.position = "none") +
labs(title = "Steps vs. Day of the Week",
x = "Day of the Week",
colour = "Day of the Week") +
# Annotate median values
geom_text(data = step_median,
aes(x=day_of_week, y=steps_median, label=steps_median),
position = position_nudge(y=1000))
steps_per_day_plot
# Compute median
step_median <- merged_df %>%
group_by(day_of_week) %>%
summarise(steps_median = median(steps))
steps_per_day_plot <- steps_per_day_plot +
# Labels
theme(legend.position = "none") +
labs(title = "Steps vs. Day of the Week",
x = "Day of the Week",
colour = "Day of the Week") +
# Annotate median values
geom_text(data = step_median,
aes(x=day_of_week, y=steps_median, label=comma(steps_median)),
position = position_nudge(y=1000))
steps_per_day_plot
